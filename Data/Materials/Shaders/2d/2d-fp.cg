#include "blending.cgh"

#define COLOR_MUL 0
#define COLOR_ADD 1
#define ALPHA_MUL 2
#define ALPHA_ADD 3

#ifndef COLOR_OP
#define COLOR_OP COLOR_MUL
#endif

FPROG_IN_BEGIN
#if TEXTURED
    FPROG_IN_TEXCOORD0(uv,2)
#endif //TEXTURED
    FPROG_IN_COLOR0_LOW(color,4)
FPROG_IN_END
    
FPROG_OUT_BEGIN
    FPROG_OUT_COLOR
FPROG_OUT_END

#if TEXTURED
DECL_FP_SAMPLER2D(tex)
#endif //TEXTURED

FPROG_BEGIN

    min10float4 in_color = FP_IN(color);

#if TEXTURED

    float2 in_uv = FP_IN(uv);

#if ALPHA8
    min10float4 resColor = min10float4( 1.0, 1.0, 1.0, FP_A8(FP_TEXTURE2D( tex, in_uv )) );
#else
    min10float4 resColor = min10float4(FP_TEXTURE2D( tex, in_uv ));
#endif

#if (COLOR_OP == COLOR_MUL)
    resColor = resColor * in_color;
#elif (COLOR_OP == COLOR_ADD)
    resColor = resColor + in_color;
#elif (COLOR_OP == ALPHA_MUL)
    resColor.a = resColor.a * in_color.a;
#elif (COLOR_OP == ALPHA_ADD)
    resColor.a = resColor.a + in_color.a;
#endif

#else //TEXTURED

    min10float4 resColor = in_color;

#endif //TEXTURED

#if GRAYSCALE
    min10float gray = dot( resColor.rgb, min10float3(0.3, 0.59, 0.11) );
    resColor.rgb = min10float3(gray,gray,gray);
#endif

#if ALPHATEST
    min10float alpha = resColor.a;
    if( alpha < 0.5 ) FP_DISCARD_FRAGMENT;
#endif

    FP_OUT_COLOR = float4(resColor);

FPROG_END
